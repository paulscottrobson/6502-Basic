; ************************************************************************************************
; ************************************************************************************************
;
;		Name:		00start.asm
;		Purpose:	Start up code.
;		Created:	21st February 2021
;		Reviewed: 	11th March 2021
;		Author:		Paul Robson (paul@robsons.org.uk)
;
; ************************************************************************************************
; ************************************************************************************************

; ************************************************************************************************
; ************************************************************************************************
;
;												Modules
;
; ************************************************************************************************
; ************************************************************************************************
; 
;			* indicates handles execution manually
;			- indicates disabled
;
.header			*
.main 	
.variable		
.assembler 		
.error			*
.extension 		*
.string 			
.device 			
.floatingpoint	- 	
.interaction
.tokeniser
.footer 		*

; ************************************************************************************************
; ************************************************************************************************
;
;											Equates.
;
; ************************************************************************************************
; ************************************************************************************************

; ************************************************************************************************
;
;								CPU type : 0 = 6502 1 = 65C02
;
; ************************************************************************************************

cputype = 0

; ************************************************************************************************
;
;			Autorun makes the interpreter automatically run the appended BASIC tokenised file
;
; ************************************************************************************************

autorun=1

; ************************************************************************************************
;
;			ColdStartNew enables or disables "New" at Cold Start
;
; ************************************************************************************************

coldstartnew=0

; ************************************************************************************************
;
;							BASIC Interpreter code starts here.
;
; ************************************************************************************************

CodeStart = $1000

; ************************************************************************************************
;
;						Data storage for work variables etc. starts here
;
;					The Memory Storage block must be *BELOW* the BASIC program.
;
; ************************************************************************************************

MemoryStorage = $800

; ************************************************************************************************
;
;										End of Memory
;
; ************************************************************************************************

EndOfMemory = $9F00

; ************************************************************************************************
;
;								Zero Page storage starts here
;
; ************************************************************************************************

ZeroPageStorage = $28

; ************************************************************************************************
;
;					Address of stack in zero page. If zero, put in storage.
;
; ************************************************************************************************

StackAddress = $90	

; ************************************************************************************************
;
;					Size of evaluation stack (6 byte elements per level)
;		
; ************************************************************************************************

StackSize = 8

; ************************************************************************************************
;
;						  Size of return stack (in 256 byte pages)
;
; ************************************************************************************************

retStackSizePages = 2

